version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: pulseplay-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-changeme}
      MONGO_INITDB_DATABASE: pulseplay
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    ports:
      - "27017:27017"
    networks:
      - pulseplay-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/pulseplay --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: pulseplay-backend
    restart: unless-stopped
    ports:
      - "${BACKEND_PORT:-3000}:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-changeme}@mongodb:27017/pulseplay?authSource=admin
      AUTH0_DOMAIN: ${AUTH0_DOMAIN}
      AUTH0_CLIENT_ID: ${AUTH0_CLIENT_ID}
      AUTH0_CLIENT_SECRET: ${AUTH0_CLIENT_SECRET}
      AUTH0_AUDIENCE: ${AUTH0_AUDIENCE}
      AUTH0_ISSUER_BASE_URL: ${AUTH0_ISSUER_BASE_URL}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:5173}
      GRADIENT_AI_API_KEY: ${GRADIENT_AI_API_KEY:-}
      SENTRY_DSN: ${SENTRY_DSN:-}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - pulseplay-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (Nginx serving static files)
  frontend:
    image: nginx:alpine
    container_name: pulseplay-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-5173}:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - frontend_dist:/usr/share/nginx/html:ro
    depends_on:
      - backend
    networks:
      - pulseplay-network

  # Optional: Mongo Express (MongoDB Admin UI)
  mongo-express:
    image: mongo-express:latest
    container_name: pulseplay-mongo-express
    restart: unless-stopped
    ports:
      - "${MONGO_EXPRESS_PORT:-8081}:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME:-admin}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD:-changeme}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-changeme}@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USER:-admin}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD:-changeme}
    depends_on:
      - mongodb
    networks:
      - pulseplay-network
    profiles:
      - debug

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  frontend_dist:
    driver: local

networks:
  pulseplay-network:
    driver: bridge
