# ============================================
# PulsePlay - Docker Environment Template
# ============================================
# This template is specifically for Docker deployments
# Copy this file to .env and fill in your actual values

# ============================================
# Docker Deployment Configuration
# ============================================
NODE_ENV=production
BACKEND_PORT=3001
FRONTEND_PORT=5173

# Update this to your Docker host IP or domain
FRONTEND_URL=http://192.168.1.237:5173

# ============================================
# MongoDB Configuration for Docker
# ============================================

# Option 1: Local MongoDB with docker-compose.yml
MONGO_ROOT_USERNAME=admin
MONGO_ROOT_PASSWORD=your_secure_mongodb_password_here
MONGODB_URI=mongodb://admin:your_secure_mongodb_password_here@mongodb:27017/pulseplay?authSource=admin

# Option 2: MongoDB Atlas with docker-compose.atlas.yml (recommended)
# MONGODB_ATLAS_URI=mongodb+srv://username:password@cluster0.xxxxx.mongodb.net/pulseplay?retryWrites=true&w=majority

# ============================================
# Auth0 Configuration for Docker
# ============================================
AUTH0_DOMAIN=your-domain.auth0.com
AUTH0_CLIENT_ID=your_auth0_client_id_here
AUTH0_CLIENT_SECRET=your_auth0_client_secret_here
AUTH0_AUDIENCE=https://api.pulseplay.ai
AUTH0_ISSUER_BASE_URL=https://your-domain.auth0.com

# Frontend Auth0 (embedded in Docker build)
VITE_AUTH0_DOMAIN=your-domain.auth0.com
VITE_AUTH0_CLIENT_ID=your_auth0_client_id_here
VITE_AUTH0_AUDIENCE=https://api.pulseplay.ai
VITE_API_URL=http://192.168.1.237:3001

# ============================================
# API Keys for Docker
# ============================================
GEMINI_API_KEY=your_gemini_api_key_here
GRADIENT_AI_API_KEY=
SENTRY_DSN=

# ============================================
# Database Admin UI (docker-compose.yml only)
# ============================================
MONGO_EXPRESS_PORT=8081
MONGO_EXPRESS_USER=admin
MONGO_EXPRESS_PASSWORD=changeme

# ============================================
# Docker Deployment Commands
# ============================================
# Local MongoDB:
# docker-compose -f docker-compose.yml up -d
#
# MongoDB Atlas:
# docker-compose -f docker-compose.atlas.yml up -d
#
# Development with hot reload:
# docker-compose -f docker-compose.dev.yml up -d

# ============================================
# Docker-Specific Notes
# ============================================
# 1. Use container service names (mongodb, backend) in connection strings
# 2. Expose ports are mapped to host (FRONTEND_PORT:80, BACKEND_PORT:3001)
# 3. For production, use MongoDB Atlas (docker-compose.atlas.yml)
# 4. Health checks are configured automatically
# 5. Volumes persist data between container restarts
# 6. Use Docker secrets for sensitive production data
