# ============================================
# PulsePlay - Environment Configuration Template
# ============================================
# Copy this file to .env and fill in your actual values
# DO NOT commit the .env file to version control
#
# This template combines all configuration options for:
# - Development environment
# - Docker deployment (local MongoDB)
# - Docker deployment (MongoDB Atlas)
# - Production deployment

# ============================================
# Environment Mode
# ============================================
# Options: development, production
NODE_ENV=development

# ============================================
# Server Configuration
# ============================================
# Backend server port
PORT=3001
BACKEND_PORT=3001

# Frontend server port (for Docker deployment)
FRONTEND_PORT=5173

# Frontend URL (for CORS and backend communication)
# Development: http://localhost:5173
# Production: https://yourdomain.com or http://your-server-ip:5173
FRONTEND_URL=http://localhost:5173

# ============================================
# MongoDB Configuration
# ============================================

# Option 1: Local MongoDB (for development or docker-compose.yml)
MONGO_ROOT_USERNAME=admin
MONGO_ROOT_PASSWORD=your_secure_mongodb_password_here
MONGODB_URI=mongodb://admin:your_secure_mongodb_password_here@mongodb:27017/pulseplay?authSource=admin

# Option 2: MongoDB Atlas (recommended for production)
# Get connection string from: https://cloud.mongodb.com/
# Format: mongodb+srv://<username>:<password>@cluster0.xxxxx.mongodb.net/pulseplay?retryWrites=true&w=majority
# Uncomment and use this for production:
# MONGODB_ATLAS_URI=mongodb+srv://username:password@cluster0.xxxxx.mongodb.net/pulseplay?retryWrites=true&w=majority

# Note: When using MongoDB Atlas, the backend will use MONGODB_ATLAS_URI if present,
# otherwise it falls back to MONGODB_URI

# ============================================
# Auth0 Configuration
# ============================================
# Get these from your Auth0 dashboard: https://manage.auth0.com/

# Backend Auth0 Configuration
AUTH0_DOMAIN=your-domain.auth0.com
AUTH0_CLIENT_ID=your_auth0_client_id_here
AUTH0_CLIENT_SECRET=your_auth0_client_secret_here
AUTH0_AUDIENCE=https://api.pulseplay.ai
AUTH0_ISSUER_BASE_URL=https://your-domain.auth0.com

# Frontend Auth0 Configuration (used in Vite build process)
# These VITE_ prefixed variables are embedded into the frontend build
VITE_AUTH0_DOMAIN=your-domain.auth0.com
VITE_AUTH0_CLIENT_ID=your_auth0_client_id_here
VITE_AUTH0_AUDIENCE=https://api.pulseplay.ai
VITE_API_URL=http://localhost:3001

# Note: For development without Auth0, you can use placeholder values:
# AUTH0_DOMAIN=dev-example.auth0.com
# AUTH0_CLIENT_ID=example_client_id
# The app will run in "Dev Mode" without authentication

# ============================================
# AI/ML API Keys
# ============================================

# Google Gemini API Key (required)
# Get from: https://makersuite.google.com/app/apikey
GEMINI_API_KEY=your_gemini_api_key_here

# Optional: DigitalOcean Gradient AI (future feature)
GRADIENT_AI_API_KEY=

# ============================================
# Database Admin UI (Optional)
# ============================================
# Mongo Express (MongoDB Admin Interface)
# Only used with docker-compose.yml (local MongoDB)
MONGO_EXPRESS_PORT=8081
MONGO_EXPRESS_USER=admin
MONGO_EXPRESS_PASSWORD=changeme

# ============================================
# Error Tracking (Optional)
# ============================================
# Sentry DSN for error tracking
# Get from: https://sentry.io/
SENTRY_DSN=

# ============================================
# Analytics (Optional)
# ============================================
# Snowflake Analytics (if using)
SNOWFLAKE_ACCOUNT=
SNOWFLAKE_USERNAME=
SNOWFLAKE_PASSWORD=

# ============================================
# Environment-Specific Examples
# ============================================

# === DEVELOPMENT ENVIRONMENT ===
# NODE_ENV=development
# PORT=3001
# BACKEND_PORT=3001
# FRONTEND_URL=http://localhost:5173
# MONGODB_URI=mongodb://localhost:27017/pulseplay-dev
# VITE_API_URL=http://localhost:3001
# Use placeholder Auth0 values for dev mode

# === DOCKER LOCAL ENVIRONMENT ===
# NODE_ENV=production
# PORT=3001
# BACKEND_PORT=3001
# FRONTEND_PORT=5173
# FRONTEND_URL=http://localhost:5173
# MONGODB_URI=mongodb://admin:password@mongodb:27017/pulseplay?authSource=admin
# VITE_API_URL=http://localhost:3001
# Real Auth0 credentials for testing

# === DOCKER ATLAS ENVIRONMENT ===
# NODE_ENV=production
# PORT=3001
# BACKEND_PORT=3001
# FRONTEND_PORT=5173
# FRONTEND_URL=http://your-server-ip:5173
# MONGODB_ATLAS_URI=mongodb+srv://user:pass@cluster.mongodb.net/pulseplay
# VITE_API_URL=http://your-server-ip:3001
# Real Auth0 credentials

# === PRODUCTION ENVIRONMENT ===
# NODE_ENV=production
# PORT=3001
# BACKEND_PORT=3001
# FRONTEND_PORT=5173
# FRONTEND_URL=https://yourdomain.com
# MONGODB_ATLAS_URI=mongodb+srv://prod-user:secure-pass@prod-cluster.mongodb.net/pulseplay
# VITE_API_URL=https://yourdomain.com
# Production Auth0 credentials
# SENTRY_DSN=https://your-sentry-dsn

# ============================================
# Security Notes for Production
# ============================================
# 1. Use strong, unique passwords for MongoDB
# 2. Use production Auth0 credentials (separate from development)
# 3. Enable HTTPS/SSL certificates
# 4. Use Docker secrets or cloud secret management (AWS Secrets Manager, etc.)
# 5. Regularly rotate API keys and passwords
# 6. Enable Sentry for error tracking
# 7. Set up monitoring and logging
# 8. Use environment-specific .env files (.env.production, .env.staging)

# ============================================
# Quick Setup Guide
# ============================================
# 1. Copy this file to .env
# 2. Replace placeholder values with your actual credentials
# 3. For development: Use local MongoDB and placeholder Auth0
# 4. For Docker: Follow the Docker environment examples above
# 5. For production: Use MongoDB Atlas and production Auth0